<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>你好世界</title>
      <link href="/%E4%BD%A0%E5%A5%BD%E4%B8%96%E7%95%8C.html"/>
      <url>/%E4%BD%A0%E5%A5%BD%E4%B8%96%E7%95%8C.html</url>
      
        <content type="html"><![CDATA[<p>测试文档</p>]]></content>
      
      
      <categories>
          
          <category> 有机朗肯循环 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 有机朗肯循环 </tag>
            
            <tag> ORC </tag>
            
            <tag> 低温余热回收 </tag>
            
            <tag> 实验台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>有机朗肯循环ORC实验台搭建(1)</title>
      <link href="/%E6%9C%89%E6%9C%BA%E6%9C%97%E8%82%AF%E5%BE%AA%E7%8E%AF%E5%AE%9E%E9%AA%8C%E5%8F%B0%E6%90%AD%E5%BB%BA-1.html"/>
      <url>/%E6%9C%89%E6%9C%BA%E6%9C%97%E8%82%AF%E5%BE%AA%E7%8E%AF%E5%AE%9E%E9%AA%8C%E5%8F%B0%E6%90%AD%E5%BB%BA-1.html</url>
      
        <content type="html"><![CDATA[<div id="TOC"><ul><li><a href="#有机朗肯循环orc实验台搭建1"id="toc-有机朗肯循环orc实验台搭建1">有机朗肯循环ORC实验台搭建（1）</a></li></ul></div><h1 id="有机朗肯循环orc实验台搭建1">有机朗肯循环ORC实验台搭建（1）</h1><p>​ 有机朗肯循环（Organic Rankine Cycle,ORC）是基于朗肯循环的一种热能转换为机械能的技术，其特点是使用有机工质而非水蒸气作为循环的工质。该技术主要用于低温热源的能量回收，如工业废热、太阳能和地热。有机朗肯循环的优点包括能够利用低品质热源和降低系统的初期投资。通过选择适当的有机工质，可以优化系统的热力学性能，从而提高整体效率。ORC技术在电力生产和废热回收方面具有广泛的应用前景。</p><p><imgsrc="https://learnenergy.tw/upload/knowledge/images/20181108-lin-fig1.jpg" /></p><span id="more"></span><p>现如今，环境问题成为了许多政策落地的首要考虑，那么对于我们做项目的科研狗，怎么拿到科研经费是我们的首要考虑。</p><blockquote><p>搞科研不是兴趣！搞科研也要有经济基础！</p></blockquote><p>虽说还有大量的煤电等化石能源在供电领域发光发热，但是新能源、清洁能源的春天已经来了。我们先看在我的所在地福建，我在过去几个月搭建实验台的过程中，很多厂对有机朗肯循环非常感兴趣，有一部分厂家是觉得节能减排，可以帮助他们在碳交易市场更好的表现。具体碳交易是什么我个人是不太清楚很细节的东西，大家自行Google，以下是我的Google：</p><blockquote><p>碳交易是一个允许企业和政府购买和出售碳排放配额的机制，旨在减少全球温室气体排放。这种机制基于“污染者付费”原则，激励企业减少其碳足迹。<br />在一个典型的碳交易系统中，政府或相关机构会设定一个总的排放限额，并将这个限额分割为可以交易的单元，通常是每一单位表示一吨二氧化碳当量。企业可以通过减少自身的排放来节省他们的配额，或者从其他企业购买额外的配额来满足他们的需求。<br />碳交易可以通过几种形式进行，包括强制性的碳交易市场和自愿性的碳交易市场。强制性市场通常涉及大型排放源，而自愿市场则允许较小的排放源和个体参与。<br />该机制还促进了碳补偿项目的发展，这些项目可以通过种植树木或支持可再生能源项目来生成碳信用。<br />碳交易不仅有助于减少全球碳排放，还可以为企业创造新的收入流，同时鼓励技术创新和清洁能源解决方案的采纳。通过有效的碳交易系统，我们可以走向一个更可持续和环保的未来。</p></blockquote><p>总而言之，不论是清洁能源还是节能减排在现在来看还是具有经济价值的。而有机朗肯循环就是节能减排上的一大好手，下面让我先简单的介绍一下有机朗肯循环。</p><p><imgsrc="https://www.techchickensoup.com/wp-content/uploads/2021/05/amaxx-i1hrg.svg" /></p><p>我们都知道，任何的发电途径实际上都是通过烧开水来实现的。最早由苏格兰的科学家约翰朗肯（也有译作兰金）WilliamJohn MacquornRankine提出的，故也被称作朗肯循环。我们首先看上面的图，用热源加热锅炉中的水，水会蒸发然后变成蒸汽，蒸汽进入上面的涡轮，推动叶片旋转。叶片旋转通过联轴器带动发电机的线圈一起旋转，就变成了我们熟知的机械能转化为电能的过程。其实到这里，发电部分就结束了，剩下的只是要控制发电机的转速来达到我们需要的频率以匹配电网上电要求。但是如果我们对推动叶片旋转的蒸汽不加以处理地排放，那么我们需要无限的水源来发电，这个时候显然就不那么合理了。所以我们为推动叶片之后的蒸汽（乏汽）添加一个冷凝器让其经过，在冷凝器中乏汽放热重新回到液态，这样在理论上我们只需要最原始的那些水就能一直发电。实际上人们也是这样做的，不同的只是加热方式，火电厂燃烧化石燃料来烧水，核电站通过核裂变烧水。</p><p>接下来我们引入一个“焓”的概念，这个概念对于我们计算理解朗肯循环的发电效率非常有用。</p><p>“焓(Enthalpy)”是一个热力学系统的能量参数，学术上把焓定义为内能和体积的勒让德变换，但是汉字的博大精深就在于“大道至简”！一个火代表它与热能有关，含代表它是物体所含有的某种量度，所以简单来说“焓”就是一个物体所含有的能量量度。它的单位是<spanclass="math inline">\(kJ/kg\)</span>，也就是说，它是每千克物体所含有的能量量度。当1kg物体吸热得到能量的时候，它的焓会增加到<spanclass="math inline">\(h_1\)</span>，当它对外做功释放能量的时候，它的焓会减少到<spanclass="math inline">\(h_2\)</span>，那么它的焓变<spanclass="math inline">\(h_1-h_2\)</span>就是它在做功过程中的能量损失。</p><p>既然焓很好理解了，那不妨我们再多理解一个概念哈哈哈哈，什么是“熵”？</p><p>我想绝大多数人肯定或多或少都听说过熵，至少也听说过熵增，而且我想大多数人还是通过宇宙来了解的熵。熵是一种态函数，它的统计学意义确实代表了无序性，所以我们总是会说不管是什么东西，什么系统，其熵都是在增加的，也就是无序性在增加。但是今天我们要讨论的是热力学中熵的意义。由于理解熵是一个比较复杂的过程，我想要先让大家记住一个事先定义：熵在热力学定义是一种做功能力的量度。也就是说，熵越高，其做功能力越强。这里我们还需要再知道一个熵增原理：</p><blockquote><p>系统经绝热过程从一个状态到另一个状态，它的熵永不减少。如果过程是可逆的，其熵不变，如果过程不可逆，其熵增加。</p></blockquote><p>绝热状态就是字面意思，就是不与外界做热量交换，那么熵增原理也就是说在一个封闭系统内，熵永远不可能减小，最理想的情况就是不变化。</p><p>我们现在回头看看上面朗肯循环的示意图，水从液态变为气态，其熵增加了，等到其做功结束后，我们要将其变到液态，那就是要让其熵减小吗？？？？这不是与熵增原理背道而驰吗？其实不然，我们说熵增原理其实是一个封闭系统内绝热过程的熵变化趋势，大自然中很多地方都不是封闭系统，总是存在换热过程，所以也是有熵减的，只是这个过程永远不可能自发完成，也永远是不可逆的过程。</p><p>终于！这俩概念说完了，我可以放图了..</p><p><imgsrc="https://www.techchickensoup.com/wp-content/uploads/2021/05/a25jz-lpt33.svg" /></p><p>这是一个朗肯循环的T-S图（温-熵图），现在我会详细解释这幅图，只要能掌握这幅图，所有的热力循环也就那么回事。</p><p>首先看坐标轴，y轴代表温度，单位K或者℃；x轴代表熵，单位kJ/K；然后看那条实曲线，它是水的饱和曲线，简单来说右侧曲线之上水为气态，左侧曲线之上都是液态，曲线之下为气液两相态。</p><p>然后我们按照数字序号来看。</p><p>1→2：<spanclass="math inline">\(W_{pump,in}\)</span>这代表我们用泵对水加压，消耗了泵功。之所以要对其加压，是因为我们要把水从水箱打到锅炉里，总不能指望水自己乖乖流向高处（伏笔，想想伏笔是什么）。在这个过程中我们可以看到，水作为饱和液态进入泵，然后绝热压缩至状态2，其温度由<spanclass="math inline">\(T_1\)</span>上升至<spanclass="math inline">\(T_2\)</span>；熵不变，即<spanclass="math inline">\(S_1=S_2\)</span>。</p><p>2→3：锅炉等压加热水，首先达到水的相变点，也就平行于x轴的直线的左交点，然后保持温度不变的持续吸热达到右交点，此时水已变成饱和蒸汽，继续吸热达到3点，这里的水蒸气已经是过热蒸汽，马上就要进行做功。这个过程中，温度从<spanclass="math inline">\(T_2\)</span>升至<spanclass="math inline">\(T_3\)</span>，熵<spanclass="math inline">\(S_2\)</span>升至<spanclass="math inline">\(S_3\)</span>，吸收热量<spanclass="math inline">\(Q_{in}\)</span>。</p><p>3→4：饱和蒸汽进入透平涡轮做功，做功量为<spanclass="math inline">\(W_{turb,out}\)</span>，这期间水发生了绝热膨胀，到达4点，此时依旧为饱和蒸汽，但是温度从<spanclass="math inline">\(T_3\)</span>降至<spanclass="math inline">\(T_4\)</span>，熵依旧不变为<spanclass="math inline">\(S_3\)</span>。</p><p>4→1：乏汽在冷凝器中等压放热<spanclass="math inline">\(Q_{out}\)</span>，水重新变回饱和水，完成一次循环。</p><p>所以我们总结一下：一次朗肯循环经历了2个绝热过程，2个等压过程，吸收热量<spanclass="math inline">\(Q{in}\)</span>，放出热量<spanclass="math inline">\(Q{out}\)</span>，外界消耗功量<spanclass="math inline">\(W_{pump,in}\)</span>，工质产生功量<spanclass="math inline">\(W_{turb,out}\)</span>。</p>]]></content>
      
      
      <categories>
          
          <category> 有机朗肯循环 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 有机朗肯循环 </tag>
            
            <tag> ORC </tag>
            
            <tag> 低温余热回收 </tag>
            
            <tag> 实验台 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工程流体力学教程(1)</title>
      <link href="/%E5%B7%A5%E7%A8%8B%E6%B5%81%E4%BD%93%E5%8A%9B%E5%AD%A6%E6%95%99%E7%A8%8B1.html"/>
      <url>/%E5%B7%A5%E7%A8%8B%E6%B5%81%E4%BD%93%E5%8A%9B%E5%AD%A6%E6%95%99%E7%A8%8B1.html</url>
      
        <content type="html"><![CDATA[<div id="TOC"><ul><li><a href="#工程流体力学教程1"id="toc-工程流体力学教程1">工程流体力学教程(1)</a><ul><li><a href="#第一章流体及其物理性质"id="toc-第一章流体及其物理性质">第一章：流体及其物理性质</a><ul><li><a href="#流体的分类" id="toc-流体的分类">流体的分类</a></li></ul></li></ul></li></ul></div><h1 id="工程流体力学教程1">工程流体力学教程(1)</h1><span id="more"></span><h2 id="第一章流体及其物理性质">第一章：流体及其物理性质</h2><p>​什么是流体力学？我想所有人都会有一个模糊的概念，因为我们完全生活在流体所包围的空间中。我们放的风筝，我们骑的自行车，买的汽车所考虑的风阻，轮船在海中航行，火箭的发射，甚至我们洗澡所用的水都需要应用流体力学的概念。所以我们好像就知道了流体有两种，液体和气体。</p><p>​那么我们再更仔细的思考一下液体和气体他们有什么共性呢？我们似乎会发现它们很容易变形，甚至气体连一个固定的体积都没有。那接下来我们给出一个定义，我们来分析这个定义里面包含了一些什么流体的必要特征：</p><p><strong>定义：受任何微小剪切力作用都能连续变形的物质</strong></p><p>​我们想想看我们学过的材料力学、理论力学里面的固体（刚体）有什么特征，我们发现对于这些物体，它能够承受剪切力的作用，也就是说在一定的限度内，固体能够承受剪切力作用。但是从我们的定义中我们发现，流体，哪怕受到再微小的剪切力都能够连续变形，哪怕这个剪切力小到只有0.000001N，它也会变形。所以这个时候我们就知道，哦原来流体是不能承受剪切的一种物质。</p><p>​那有的同学又开始思考起了另一个问题：水和空气都属于流体，但是他们好像非常不同，很不一样，就像我可以用一个量筒轻易地量出100ml的水，但是我却不能用量筒量取确定体积的空气。那这怎么办呢？我们知道，科学问题的求解及知识体系的建立就是希望在能够保留足够精度的情况下尽可能地抽象出问题本质。那既然水和空气都是流体，那我们能不能做一个简单的分类，用它们的本质去研究与它们相类似的问题呢？答案当然是可以的！</p><h3 id="流体的分类">流体的分类</h3><p>​根据流体中相邻分子之间的距离，我们可以将流体分为2大类：<strong>液体、气体</strong>。</p><p>​对于液体来说，它们之间的分子距较小，所以分子之间的吸引力较大，所以限制它们具有一定的体积。</p><p>​对于气体来说，它们之间的分子距比较大，故而分子之间的吸引力就比较弱，通常就不具有一定的体积。<br /><span class="math display">\[在重力作用下的\\\begin{align}\frac{dN}{dt}&amp;=\frac{\partial}{\partial t}\iiint\limits_{CV}(u+\frac{v^2}{2})\rhodV+\iint\limits_{CS}(u+\frac{v^2}{2})\rho v_n\nonumber \\&amp;=\iiint\limits_{CV}\rho\vec{f}\cdot\vec{v}dV+\iint\limits_{CS}\vec{p_n}\cdot\vec{v}dA+\dotQ\nonumber\end{align}\]</span></p>]]></content>
      
      
      <categories>
          
          <category> 工程流体力学 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工程流体力学 </tag>
            
            <tag> 大学课程 </tag>
            
            <tag> 流体力学 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab新手教程(3)</title>
      <link href="/Matlab%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B(3).html"/>
      <url>/Matlab%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B(3).html</url>
      
        <content type="html"><![CDATA[<div id="TOC"><ul><li><a href="#数组" id="toc-数组">数组</a></li><li><a href="#元胞数组" id="toc-元胞数组">元胞数组</a><ul><li><a href="#元胞数组的创建"id="toc-元胞数组的创建">元胞数组的创建</a></li><li><a href="#元胞数组的寻访"id="toc-元胞数组的寻访">元胞数组的寻访</a></li><li><a href="#元胞数组的操作" id="toc-元胞数组的操作">元胞数组的操作</a><ul><li><a href="#元胞数组的合并"id="toc-元胞数组的合并">元胞数组的合并</a></li><li><a href="#元胞数组中指定单元的删除"id="toc-元胞数组中指定单元的删除">元胞数组中指定单元的删除</a></li><li><a href="#使用reshape函数改变元胞数组的形状"id="toc-使用reshape函数改变元胞数组的形状">使用reshape函数改变元胞数组的形状</a></li></ul></li></ul></li><li><a href="#本节小结" id="toc-本节小结">本节小结</a></li></ul></div><p>​ 在<ahref="https://huntsman.link/2022/10/19/Matlab%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B(2)/">Matlab新手教程(2)</a>中，我们学习了Matlab数据类型中的逻辑类型、字符和字符串类型以及函数句柄类型，今天将要学习一个比较难理解但是很有用的数据类型：<strong>元胞数组</strong>。</p><span id="more"></span><h1 id="数组">数组</h1><p>​在Matlab中进行运算的所有数据类型，都是按照数组及矩阵的形式进行存储和运算的，二者在Matlab中的剧本运算性质不同，数组强调<u>元素对元素的运算</u>，而矩阵则采用<u>线性代数的运算方式</u>。我们先介绍一下数组，数组的属性及数组之间的逻辑关系，是编写程序时非常重要的两个方面。在Matlab平台上，数组的定义是广义的，它的元素可以是任何数据类型，比如我们先定义一个最基本的数组：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a=[<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span></span><br></pre></td></tr></table></figure><p>​那如果我们需要定义很多个相同步长元素的数组，我们可以使用冒号<em>:</em>来代表一系列数值，在没有指定步长前Matlab默认步长为1。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a=<span class="number">1</span>:<span class="number">10</span></span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span>     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span>    <span class="number">10</span></span><br></pre></td></tr></table></figure><p>​ 那么我们给出创建一个数字数组的最一般形式</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Array = <span class="built_in">i</span>:<span class="built_in">j</span>:k</span><br></pre></td></tr></table></figure><p>​创建从i开始，步长为j，到k结束的数字数组。如果i&gt;k，则Matlab会返回一个空矩阵，例如</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a=<span class="number">1</span>:<span class="number">0.5</span>:<span class="number">10</span></span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">  列 <span class="number">1</span> 至 <span class="number">6</span></span><br><span class="line"></span><br><span class="line">    <span class="number">1.0000</span>    <span class="number">1.5000</span>    <span class="number">2.0000</span>    <span class="number">2.5000</span>    <span class="number">3.0000</span>    <span class="number">3.5000</span></span><br><span class="line"></span><br><span class="line">  列 <span class="number">7</span> 至 <span class="number">12</span></span><br><span class="line"></span><br><span class="line">    <span class="number">4.0000</span>    <span class="number">4.5000</span>    <span class="number">5.0000</span>    <span class="number">5.5000</span>    <span class="number">6.0000</span>    <span class="number">6.5000</span></span><br><span class="line"></span><br><span class="line">  列 <span class="number">13</span> 至 <span class="number">18</span></span><br><span class="line"></span><br><span class="line">    <span class="number">7.0000</span>    <span class="number">7.5000</span>    <span class="number">8.0000</span>    <span class="number">8.5000</span>    <span class="number">9.0000</span>    <span class="number">9.5000</span></span><br><span class="line"></span><br><span class="line">  列 <span class="number">19</span></span><br><span class="line"></span><br><span class="line">   <span class="number">10.0000</span></span><br><span class="line"><span class="comment">%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%</span></span><br><span class="line">&gt;&gt; a=<span class="number">10</span>:<span class="number">0.5</span>:<span class="number">1</span></span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">  空的 <span class="number">1</span>×<span class="number">0</span> double 行向量</span><br></pre></td></tr></table></figure><p>​Matlab中还预定义了一些函数也可以用来创建线性序列和逻辑序列比如：linspace(a,b,n)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">%在区间[a,b]上创建一个有n个元素的向量</span><br><span class="line">&gt;&gt; a=linspace(0,5,6)%采用linspace创建</span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">     0     1     2     3     4     5</span><br><span class="line"></span><br><span class="line">&gt;&gt; b=0:1:5%采用步长形式创建</span><br><span class="line"></span><br><span class="line">b =</span><br><span class="line"></span><br><span class="line">     0     1     2     3     4     5</span><br><span class="line"></span><br><span class="line">&gt;&gt; isequal(a,b)%判断a与b是否相等</span><br><span class="line"></span><br><span class="line">ans =</span><br><span class="line"></span><br><span class="line">  logical</span><br><span class="line"></span><br><span class="line">   1</span><br></pre></td></tr></table></figure><h1 id="元胞数组">元胞数组</h1><p>​介绍完了基本数组，我们就要开始学习元胞数组，元胞数组是一种无所不包的广义矩阵，你可以理解为这个矩阵的每一个元素可以是Matlab数据类型中的任意一种，甚至你可以套娃，在一个元胞数组内嵌套多个元胞数组。所以我比较喜欢把它定义为一个收纳箱，这个收纳箱里面可以装任何东西，而且它的维数也不受限制，可以是一维二维乃至多维，所以在元胞数组中元素不称为元素，而是<strong>元胞</strong>。</p><h2 id="元胞数组的创建">元胞数组的创建</h2><p>​那么我们该如何创建一个元胞数组呢？Matlab里面提供了两种方法，第一种方法是通过赋值语句进行创建，第二种方法是通过cell函数创建空元胞数组然后进行赋值。我们先尝试第一种方法：通过赋值语句进行创建，这里需要注意的是，<strong>与普通数组有所不同，元胞数组使用花括号{}进行创建，使用逗号，分隔每一个单元，使用分号；换行。</strong></p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a = &#123;<span class="string">&#x27;huntsman&#x27;</span>,[<span class="number">2</span>,<span class="number">0</span>,<span class="number">7</span>,<span class="number">8</span>];<span class="string">&#x27;is&#x27;</span>,<span class="string">&#x27;nice&#x27;</span>&#125;<span class="comment">%创建元胞数组a</span></span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">  <span class="number">2</span>×<span class="number">2</span> cell 数组</span><br><span class="line"></span><br><span class="line">    &#123;<span class="string">&#x27;huntsman&#x27;</span>&#125;    &#123;<span class="number">1</span>×<span class="number">4</span> double&#125;</span><br><span class="line">    &#123;<span class="string">&#x27;is&#x27;</span>      &#125;    &#123;<span class="string">&#x27;nice&#x27;</span>    &#125;</span><br><span class="line">    </span><br><span class="line">&gt;&gt; celldisp(a)<span class="comment">%显示元胞数组a</span></span><br><span class="line"> </span><br><span class="line">a&#123;<span class="number">1</span>,<span class="number">1</span>&#125; =</span><br><span class="line"> </span><br><span class="line">huntsman</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">a&#123;<span class="number">2</span>,<span class="number">1</span>&#125; =</span><br><span class="line"> </span><br><span class="line">is</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">a&#123;<span class="number">1</span>,<span class="number">2</span>&#125; =</span><br><span class="line"> </span><br><span class="line">     <span class="number">2</span>     <span class="number">0</span>     <span class="number">7</span>     <span class="number">8</span></span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">a&#123;<span class="number">2</span>,<span class="number">2</span>&#125; =</span><br><span class="line"> </span><br><span class="line">nice</span><br></pre></td></tr></table></figure><p>​ 接下来我们采用cell函数创建</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%cell函数的调用格式为：cellName = cell(m,n)，创建一个m*n行的元胞数组，其每一个单元均为空</span></span><br><span class="line">&gt;&gt; b=cell(<span class="number">2</span>,<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">b =</span><br><span class="line"></span><br><span class="line">  <span class="number">2</span>×<span class="number">2</span> cell 数组</span><br><span class="line"></span><br><span class="line">    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;</span><br><span class="line">    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;</span><br></pre></td></tr></table></figure><h2 id="元胞数组的寻访">元胞数组的寻访</h2><p>​<strong>WARNING</strong>：<u>元胞数组的寻访</u>！！！关于Matlab逻辑底层对于元胞内和元胞外寻址这里不做赘述，我们只需要理解元胞数组对应的操作对象有两个，一个元胞数组中的单元，一个是元胞数组单元中的内容。</p><p><strong>重要的内容读三遍</strong></p><p><strong>重要的内容读三遍</strong></p><p><strong>重要的内容读三遍</strong></p><p>对于元胞数组C来说，C(m,n)指的是元胞数组中第m行n列，而C{m,n}指的是元胞数组中第m行n列中的内容。下面我们通过代码来分析他们的不同。我们还是以刚刚定义的2x2元胞数组a来举例：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; b=a(<span class="number">1</span>,<span class="number">1</span>)<span class="comment">%对元胞数组单元进行操作</span></span><br><span class="line"></span><br><span class="line">b =</span><br><span class="line"></span><br><span class="line">  <span class="number">1</span>×<span class="number">1</span> cell 数组</span><br><span class="line"></span><br><span class="line">    &#123;<span class="string">&#x27;huntsman&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">&gt;&gt; c=a&#123;<span class="number">1</span>,<span class="number">1</span>&#125;<span class="comment">%对元胞数组单元内容进行操作</span></span><br><span class="line"></span><br><span class="line">c =</span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;huntsman&#x27;</span></span><br><span class="line"> </span><br><span class="line">&gt;&gt; whos b</span><br><span class="line">  Name      Size            Bytes  Class    Attributes</span><br><span class="line"></span><br><span class="line">  b         <span class="number">1</span>x1               <span class="number">120</span>  cell               </span><br><span class="line"></span><br><span class="line">&gt;&gt; whos c</span><br><span class="line">  Name      Size            Bytes  Class    Attributes</span><br><span class="line"></span><br><span class="line">  c         <span class="number">1</span>x8                <span class="number">16</span>  char               </span><br></pre></td></tr></table></figure><p>​观察b和c的class，我们发现b是cell也就是元胞数组，而c是char也就是字符串，希望通过这个例子大家能分清这两个操作的不同。</p><h2 id="元胞数组的操作">元胞数组的操作</h2><p>​元胞数组的操作包括合并、删除元胞数组中的指定单元、改变元胞数组的形状等。我们将依次介绍。</p><h3 id="元胞数组的合并">元胞数组的合并</h3><p>​所谓元胞数组的合并，其实就是我们先对元胞数组单元中的内容赋值，然后组成一个元胞数组，就类似于我们造车的时候先把轮胎、座椅等等部件造好，然后将其组合也就成为了一台车。而不是先把车架做好，再一个一个部件安上去。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a&#123;<span class="number">1</span>,<span class="number">1</span>&#125;=<span class="string">&#x27;huntsman&#x27;</span>;</span><br><span class="line">a&#123;<span class="number">1</span>,<span class="number">2</span>&#125;=<span class="string">&#x27;is&#x27;</span>;</span><br><span class="line">a&#123;<span class="number">1</span>,<span class="number">3</span>&#125;=<span class="string">&#x27;nice&#x27;</span>;</span><br><span class="line">&gt;&gt; a</span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">  <span class="number">1</span>×<span class="number">3</span> cell 数组</span><br><span class="line"></span><br><span class="line">    &#123;<span class="string">&#x27;huntsman&#x27;</span>&#125;    &#123;<span class="string">&#x27;is&#x27;</span>&#125;    &#123;<span class="string">&#x27;nice&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="元胞数组中指定单元的删除">元胞数组中指定单元的删除</h3><p>​这个部分很好理解，我们要删除指定单元中的内容，我们只需要将其赋值为空矩阵即可，但是要注意的的是我们操作的对象是内容。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a(<span class="number">1</span>,<span class="number">1</span>)=[]<span class="comment">%操作对象不正确，报错</span></span><br><span class="line">空赋值只能具有一个非冒号索引。</span><br><span class="line"> </span><br><span class="line">&gt;&gt; a&#123;<span class="number">1</span>,<span class="number">1</span>&#125;=[]<span class="comment">%赋值空矩阵</span></span><br><span class="line"></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">  <span class="number">1</span>×<span class="number">3</span> cell 数组</span><br><span class="line"></span><br><span class="line">    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="string">&#x27;is&#x27;</span>&#125;    &#123;<span class="string">&#x27;nice&#x27;</span>&#125;</span><br></pre></td></tr></table></figure><h3id="使用reshape函数改变元胞数组的形状">使用reshape函数改变元胞数组的形状</h3><p>​ reshape函数的调用格式为：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">trimC = <span class="built_in">reshape</span>(C,M,N)</span><br></pre></td></tr></table></figure><p>​ 表示将元胞数组C改变成M行N列的新元胞数组。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; C = cell(<span class="number">3</span>,<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">C =</span><br><span class="line"></span><br><span class="line">  <span class="number">3</span>×<span class="number">4</span> cell 数组</span><br><span class="line"></span><br><span class="line">    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;</span><br><span class="line">    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;</span><br><span class="line">    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;</span><br><span class="line"></span><br><span class="line">&gt;&gt; newC = <span class="built_in">reshape</span>(C,<span class="number">4</span>,<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line">newC =</span><br><span class="line"></span><br><span class="line">  <span class="number">4</span>×<span class="number">3</span> cell 数组</span><br><span class="line"></span><br><span class="line">    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;</span><br><span class="line">    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;</span><br><span class="line">    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;</span><br><span class="line">    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;    &#123;<span class="number">0</span>×<span class="number">0</span> double&#125;</span><br></pre></td></tr></table></figure><h1 id="本节小结">本节小结</h1><p>本节我们学习了Matlab数据结构中的数组，尤其需要掌握的是元胞数组，因为元胞数组就像一个收纳盒一样，或者像一个RAM一样，我们可以把我们需要的东西存到元胞数组中，方便地取用。在下一节中，我们开始学习结构体。</p>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab新手教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab新手教程(2)</title>
      <link href="/Matlab%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B(2).html"/>
      <url>/Matlab%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B(2).html</url>
      
        <content type="html"><![CDATA[<div id="TOC"><ul><li><a href="#matlab新手教程2"id="toc-matlab新手教程2">Matlab新手教程（2）</a><ul><li><a href="#逻辑类型" id="toc-逻辑类型">逻辑类型</a></li><li><a href="#字符和字符串" id="toc-字符和字符串">字符和字符串</a></li><li><a href="#函数句柄" id="toc-函数句柄">函数句柄</a></li></ul></li></ul></div><h1 id="matlab新手教程2">Matlab新手教程（2）</h1><p>​ 在<ahref="https://huntsman.link/2022/10/17/Matlab%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B(1)/">Matlab新手教程（1）中</a>，我们介绍了Maltab数据类型中的第一种：数值类型，接下来我们介绍第二种：逻辑类型。</p><span id="more"></span><h2 id="逻辑类型">逻辑类型</h2><p>​逻辑类型的数据是指布尔类型的数据及数据之间的逻辑关系。除了传统的数学运算，Maltab还支持关系和逻辑运算。这些运算的目的是提供求解真/假命题的答案。作为所有关系和逻辑表达式的输入，Matlab把任何非零数值当作真，把零当作假。所有关系和逻辑表达式的输出：对于真，输出为1；对于假，输出为0。逻辑类型数据在进行运算时需要用到关系操作符和逻辑运算符，如下表：</p><table><thead><tr><th style="text-align: center;">关系操作符</th><th style="text-align: center;">说明</th></tr></thead><tbody><tr><td style="text-align: center;">&lt;</td><td style="text-align: center;">小于</td></tr><tr><td style="text-align: center;">&lt;=</td><td style="text-align: center;">小于或等于</td></tr><tr><td style="text-align: center;">&gt;</td><td style="text-align: center;">大于</td></tr><tr><td style="text-align: center;">&gt;=</td><td style="text-align: center;">大于或等于</td></tr><tr><td style="text-align: center;">==</td><td style="text-align: center;">等于</td></tr><tr><td style="text-align: center;">~=</td><td style="text-align: center;">不等于</td></tr><tr><td style="text-align: center;">&amp;</td><td style="text-align: center;">与</td></tr><tr><td style="text-align: center;">|</td><td style="text-align: center;">或</td></tr><tr><td style="text-align: center;">~</td><td style="text-align: center;">非</td></tr></tbody></table><p>​Matlab中的关系操作符能够用来比较两个同样大小的数组，或者用来比较一个数组和一个标量。在后一种情况下，标量会和数组中的每一个元素进行比较，结果与数组大小一样，例如：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a= <span class="number">1</span>:<span class="number">5</span>,b=<span class="number">7</span>-a</span><br><span class="line">a =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span></span><br><span class="line">b =</span><br><span class="line">     <span class="number">6</span>     <span class="number">5</span>     <span class="number">4</span>     <span class="number">3</span>     <span class="number">2</span></span><br><span class="line">&gt;&gt; TrueorFalse = (a == b)<span class="comment">%判断a与b中的元素是否相等</span></span><br><span class="line">TrueorFalse =</span><br><span class="line">  <span class="number">1</span>×<span class="number">5</span> logical 数组</span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span><span class="comment">%这里我们看到没有元素相等，所以全部返回0</span></span><br><span class="line"><span class="comment">%%--------------------------------------------------------   </span></span><br><span class="line">&gt;&gt; a=<span class="number">1</span>:<span class="number">10</span>,b=<span class="number">10</span>-a</span><br><span class="line">a =</span><br><span class="line">     <span class="number">1</span>     <span class="number">2</span>     <span class="number">3</span>     <span class="number">4</span>     <span class="number">5</span>     <span class="number">6</span>     <span class="number">7</span>     <span class="number">8</span>     <span class="number">9</span>    <span class="number">10</span></span><br><span class="line">b =</span><br><span class="line">     <span class="number">9</span>     <span class="number">8</span>     <span class="number">7</span>     <span class="number">6</span>     <span class="number">5</span>     <span class="number">4</span>     <span class="number">3</span>     <span class="number">2</span>     <span class="number">1</span>     <span class="number">0</span></span><br><span class="line">&gt;&gt; TrueorFalse=(a==b)</span><br><span class="line">TrueorFalse =</span><br><span class="line">  <span class="number">1</span>×<span class="number">10</span> logical 数组</span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span><span class="comment">%现在我们看到a与b中的5相等，返回1</span></span><br></pre></td></tr></table></figure><p>​ 同理，Matlab也可以做逻辑运算，如：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; A = <span class="number">1</span>:<span class="number">10</span>;</span><br><span class="line">&gt;&gt; TrueorFalse = (A&gt;<span class="number">3</span>)&amp;(A&lt;<span class="number">8</span>)<span class="comment">%判断A中元素是否在3~8之间</span></span><br><span class="line">TrueorFalse =</span><br><span class="line">  <span class="number">1</span>×<span class="number">10</span> logical 数组</span><br><span class="line">   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">1</span>   <span class="number">1</span>   <span class="number">1</span>   <span class="number">1</span>   <span class="number">0</span>   <span class="number">0</span>   <span class="number">0</span></span><br></pre></td></tr></table></figure><p>​除了上述关系操作符与逻辑运算符，Matlab还提供了大量其他关系的逻辑函数。</p><ol type="1"><li><strong><em>xor(x,y)</em></strong>：异或运算，<em>x</em>和<em>y</em>同时为假或真时返回0，否则返回1；</li><li><strong><em>any(x)</em></strong>：判断是否为零向量或零矩阵，如果是非零的，返回1，否则返回0；<br />除此之外，Matlab还提供了一些函数，在运算过程中用来测试特殊值或者条件是否存在，并返回相应的表示结果，大家看看就行<br /><imgsrc="https://pic1.imgdb.cn/item/634fdff516f2c2beb19503b0.jpg" /></li></ol><h2 id="字符和字符串">字符和字符串</h2><p>​在Matlab中，文本当作特征字符串或者简单地当作字符串。字符串能够显示在屏幕上，也可以用来构成一些命令，这些命令在其他的命令中用于求值或者被执行。</p><p>​在Matlab中可能会遇到对字符和字符串的操作，笔者曾经就遇到过这样的问题，需要对字符进行转码。一个字符串是存储在一个<strong>行向量</strong>中的文本，这个行向量中的每一个元素代表一个字符。实际上，想必大家已经知道了，在Matlab中字符也是以ASCII码存储的。当在屏幕上显示字符变量的值时，显示出来的是文本，而不是ASCII数字。由于字符串是通过向量形式来存储的，因此可以通过对它的下标对字符串中的任何一个元素进行访问。字符矩阵也可以通过下标索引进行访问，但是<strong>矩阵的每行字符数必须相同</strong>。</p><p>​ 下面我们以一个最简单的例子来说明字符串和ASCII码之间的表达：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; str=<span class="string">&#x27;huntsman.link is a good web&#x27;</span></span><br><span class="line">str =</span><br><span class="line">    <span class="string">&#x27;huntsman.link is a good web&#x27;</span></span><br><span class="line">&gt;&gt; <span class="built_in">abs</span>(str)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">  列 <span class="number">1</span> 至 <span class="number">19</span></span><br><span class="line">   <span class="number">104</span>   <span class="number">117</span>   <span class="number">110</span>   <span class="number">116</span>   <span class="number">115</span>   <span class="number">109</span>    <span class="number">97</span>   <span class="number">110</span>    <span class="number">46</span>   <span class="number">108</span>   <span class="number">105</span>   <span class="number">110</span>   <span class="number">107</span>    <span class="number">32</span>   <span class="number">105</span>   <span class="number">115</span>    <span class="number">32</span>    <span class="number">97</span>    <span class="number">32</span></span><br><span class="line">  列 <span class="number">20</span> 至 <span class="number">27</span></span><br><span class="line">   <span class="number">103</span>   <span class="number">111</span>   <span class="number">111</span>   <span class="number">100</span>    <span class="number">32</span>   <span class="number">119</span>   <span class="number">101</span>    <span class="number">98</span></span><br></pre></td></tr></table></figure><p>​从以上代码我们可以看到，每一个字符都被转换成了ASCII码，那此时我们就可以对其进行操作，例如我们将所有的字符ASCII码加10</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; ASCII=<span class="built_in">ans</span>+<span class="number">10</span></span><br><span class="line">ASCII =</span><br><span class="line">  列 <span class="number">1</span> 至 <span class="number">19</span></span><br><span class="line">   <span class="number">114</span>   <span class="number">127</span>   <span class="number">120</span>   <span class="number">126</span>   <span class="number">125</span>   <span class="number">119</span>   <span class="number">107</span>   <span class="number">120</span>    <span class="number">56</span>   <span class="number">118</span>   <span class="number">115</span>   <span class="number">120</span>   <span class="number">117</span>    <span class="number">42</span>   <span class="number">115</span>   <span class="number">125</span>    <span class="number">42</span>   <span class="number">107</span>    <span class="number">42</span></span><br><span class="line">  列 <span class="number">20</span> 至 <span class="number">27</span></span><br><span class="line">   <span class="number">113</span>   <span class="number">121</span>   <span class="number">121</span>   <span class="number">110</span>    <span class="number">42</span>   <span class="number">129</span>   <span class="number">111</span>   <span class="number">108</span></span><br><span class="line">&gt;&gt; char(ASCII)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="string">&#x27;rx~&#125;wkx8vsxu*s&#125;*k*qyyn*ol&#x27;</span></span><br></pre></td></tr></table></figure><p>​我们再将操作完成后的ASCII码转为文字我们可以发现已经操作成功了。那我们再减10把它变回来。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; ASCII=ASCII<span class="number">-10</span></span><br><span class="line">ASCII =</span><br><span class="line">  列 <span class="number">1</span> 至 <span class="number">19</span></span><br><span class="line">   <span class="number">104</span>   <span class="number">117</span>   <span class="number">110</span>   <span class="number">116</span>   <span class="number">115</span>   <span class="number">109</span>    <span class="number">97</span>   <span class="number">110</span>    <span class="number">46</span>   <span class="number">108</span>   <span class="number">105</span>   <span class="number">110</span>   <span class="number">107</span>    <span class="number">32</span>   <span class="number">105</span>   <span class="number">115</span>    <span class="number">32</span>    <span class="number">97</span>    <span class="number">32</span></span><br><span class="line">  列 <span class="number">20</span> 至 <span class="number">27</span></span><br><span class="line">   <span class="number">103</span>   <span class="number">111</span>   <span class="number">111</span>   <span class="number">100</span>    <span class="number">32</span>   <span class="number">119</span>   <span class="number">101</span>    <span class="number">98</span></span><br><span class="line">&gt;&gt; char(ASCII)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="string">&#x27;huntsman.link is a good web&#x27;</span></span><br></pre></td></tr></table></figure><p>​所以我们发现了，因为字符串是数值数组，所以它们可以用Matlab中所有可利用的数组操作工具进行操作。例如，我们继续针对之前定义的字符串进行操作：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; U = str(<span class="number">1</span>:<span class="number">8</span>)</span><br><span class="line">U =</span><br><span class="line">    <span class="string">&#x27;huntsman&#x27;</span></span><br></pre></td></tr></table></figure><p>或者我们可以：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; U=str(<span class="number">8</span>:<span class="number">-1</span>:<span class="number">1</span>)</span><br><span class="line">U =</span><br><span class="line">    <span class="string">&#x27;namstnuh&#x27;</span></span><br></pre></td></tr></table></figure><p>​所以，在Matlab中字符串像数组一样进行编址。这里再叮嘱一下，字符串中的单引号是通过两个连续的单引号表示的：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; str2=<span class="string">&#x27;I&#x27;&#x27;m HuntsMan2078&#x27;</span></span><br><span class="line">str2 =</span><br><span class="line">    <span class="string">&#x27;I&#x27;</span>m HuntsMan2078&#x27;</span><br></pre></td></tr></table></figure><p>​ 另外，我们也可以像构建矩阵一样构建一个字符串：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; U=<span class="string">&#x27;I&#x27;&#x27;m &#x27;</span></span><br><span class="line">&gt;&gt; V=<span class="string">&#x27;HuntsMan2078&#x27;</span>;</span><br><span class="line">&gt;&gt; W=[U,V]</span><br><span class="line">W =</span><br><span class="line">    <span class="string">&#x27;I&#x27;</span>m HuntsMan2078&#x27;</span><br></pre></td></tr></table></figure><h2 id="函数句柄">函数句柄</h2><p>​ 在Matlab中，对函数的调用方法分为直接调用和间接调用。</p><p><strong>直接调用</strong>，被调用的函数成为子函数。但是子函数只能被与其M文件同名的主函数或在M文件中的其他函数所调用，这里大家可以理解为子函数不是一个全局变量，它只在当前程序有用。</p><p><strong>间接调用</strong>，使用函数句柄对函数进行调用可以避免上述的问题。函数句柄提供了一种间接调用函数的方法，。创建函数句柄需要用的操作符*<spanclass="citation"data-cites="*">@*</span>。对Matlab库函数中提供的各种M文件中的函数和我们自己编写的程序中的内部函数，都可以创建函数句柄，从而可以通过函数句柄来实现对这些函数的间接调用。</p><p>​ 创建函数句柄的一般句法格式为：</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Function_Handle = @Function_Filenmae;</span><br></pre></td></tr></table></figure><p>​ 其中：</p><ul><li><p>Function_Filename是函数所对应的M文件的名称或Matlab内部函数的名称。</p></li><li><p><span class="citation"data-cites="是句柄创建操作符">@是句柄创建操作符</span>。</p></li><li><p>Function_Handle变量保存了这一函数句柄，并在后续的运算中作为数据流进行传递。</p></li></ul><p>例如，F_Handle=<span class="citation"data-cites="cos就创建了Matlab内部函数cos的句柄">@cos就创建了Matlab内部函数cos的句柄</span>，并将其保存在F_Handle变量中，在后续的运算过程中就可以通过F_Handle(x)来实现cos(x)的功能。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; F_Handle=@<span class="built_in">cos</span>;</span><br><span class="line">&gt;&gt; F_Handle(<span class="number">0</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">     <span class="number">1</span></span><br><span class="line">     </span><br><span class="line">&gt;&gt;F_Handle</span><br><span class="line">F_Handle =</span><br><span class="line">  包含以下值的 function_handle:</span><br><span class="line">    @<span class="built_in">cos</span></span><br></pre></td></tr></table></figure><p>​在通过函数句柄调用函数时，也需要指定函数的输入参数。如：可以通过F_Handle(arg1,arg2,...,argn)这样的调用格式来调用具有多个输入参数的函数。对于那些没有输入参数的函数，在使用句柄调用时，在句柄变量之后的圆括号中不填写变量名即可，即F_Handle()。Matlab库函数中提供了大量关于处理函数句柄的操作函数，将函数句柄的功能与其他数据类型联系起来，扩展了函数句柄的应用。函数句柄的简单操作函数如表：</p><table><colgroup><col style="width: 33%" /><col style="width: 66%" /></colgroup><thead><tr><th>函数名称</th><th>函数功能</th></tr></thead><tbody><tr><td>functions(funhandle)</td><td>返回一个结构体，存储了函数的名称、函数类型（simple或overload），以及函数M文件的位置</td></tr><tr><td>func2str(funhandle)</td><td>将函数句柄转换为函数名称字符串</td></tr><tr><td>str2func(str)</td><td>将字符串代表的函数转换为函数句柄</td></tr><tr><td>save filename.mat funhandle</td><td>将函数句柄保存在*.mat文件中</td></tr><tr><td>load filename.mat funhandle</td><td>吧*.mat文件中存储的函数句柄加载到工作区</td></tr><tr><td>isa(var,'function_handle')</td><td>检测变量var是否是函数句柄</td></tr><tr><td>isequal(funhandlea,funhandleb)</td><td>检测两个函数句柄是否对应同一个函数</td></tr></tbody></table><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">%funstions(funhandle)演示</span></span><br><span class="line">&gt;&gt; fun_a=@<span class="built_in">cos</span></span><br><span class="line">fun_a =</span><br><span class="line">  包含以下值的 function_handle:</span><br><span class="line">    @<span class="built_in">cos</span></span><br><span class="line">&gt;&gt; functions(fun_a)</span><br><span class="line"><span class="built_in">ans</span> = </span><br><span class="line">  包含以下字段的 struct:</span><br><span class="line">    <span class="function"><span class="keyword">function</span>: &#x27;<span class="title">cos</span>&#x27;</span></span><br><span class="line">        <span class="built_in">type</span>: <span class="string">&#x27;simple&#x27;</span></span><br><span class="line">        file: <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">%func2str(funhandle)演示       </span></span><br><span class="line">&gt;&gt; func2str(fun_a)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">    <span class="string">&#x27;cos&#x27;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">%str2func(str) 演示</span></span><br><span class="line">&gt;&gt; str2func(<span class="built_in">ans</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line">  包含以下值的 function_handle:</span><br><span class="line">    @<span class="built_in">cos</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">%save filename.mat funhandle/load filename.mat funhandle演示  </span></span><br><span class="line">&gt;&gt; func_a=@<span class="built_in">cos</span>;<span class="comment">%定义函数句柄func_a</span></span><br><span class="line">&gt;&gt; save func_a.mat func_a<span class="comment">%把函数句柄&#x27;func_a&#x27;存储成&#x27;func_a.mat’文件，注意，文件名可以任取，这时你会发现你的matlab当前工作文件夹中出现了&#x27;func_a.mat’文件</span></span><br><span class="line">&gt;&gt; clear<span class="comment">%将工作区中的所有变量清除，然后我们尝试运算一下</span></span><br><span class="line">&gt;&gt; func_a(<span class="built_in">pi</span>)</span><br><span class="line">函数或变量 <span class="string">&#x27;func_a&#x27;</span> 无法识别。<span class="comment">%我们发现现在函数句柄不能识别。</span></span><br><span class="line">&gt;&gt; load func_a.mat func_a<span class="comment">%重新载入我们刚刚保存的.m文件</span></span><br><span class="line">&gt;&gt; func_a(<span class="built_in">pi</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">    <span class="number">-1</span><span class="comment">%再次尝试计算，发现已经载入成功</span></span><br><span class="line"><span class="comment">%isa(var,&#x27;function_handle&#x27;)演示</span></span><br><span class="line">&gt;&gt; isa(func_a,<span class="string">&#x27;function_handle&#x27;</span>)</span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">logical</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br><span class="line"><span class="comment">%isequal(funhandlea,funhandleb)演示</span></span><br><span class="line">&gt;&gt; func_b=@<span class="built_in">sin</span>;<span class="comment">%定义函数句柄b</span></span><br><span class="line">&gt;&gt; <span class="built_in">isequal</span>(func_a,func_b)<span class="comment">%func_a与func_b不对应同一个函数，返回0</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  logical</span><br><span class="line"></span><br><span class="line">   <span class="number">0</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">isequal</span>(func_a,@<span class="built_in">cos</span>)<span class="comment">%func_a与@cos对应同一个函数，返回1</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">ans</span> =</span><br><span class="line"></span><br><span class="line">  logical</span><br><span class="line"></span><br><span class="line">   <span class="number">1</span></span><br><span class="line"></span><br><span class="line">&gt;&gt; <span class="built_in">isequal</span>(func_a,<span class="built_in">cos</span>)<span class="comment">%这里我们没有在cos前加入@寻址，所以这里的cos不是一个句柄，报错</span></span><br><span class="line">错误使用 <span class="built_in">cos</span></span><br><span class="line">输入参数的数目不足。</span><br></pre></td></tr></table></figure><p>那么，到这里我们Matlab新手教程(2)就结束了，我们到目前为止已经学习了Matlab中数据类型中的3种，<strong>数值类型、字符和字符串、函数句柄</strong>，在下一章种，我们将学习第四种：元胞数组。</p>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab新手教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LaTeX科研论文新手教程</title>
      <link href="/Latex%E7%A7%91%E7%A0%94%E8%AE%BA%E6%96%87%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B.html"/>
      <url>/Latex%E7%A7%91%E7%A0%94%E8%AE%BA%E6%96%87%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B.html</url>
      
        <content type="html"><![CDATA[<div id="TOC"><ul><li><a href="#latex科研论文新手教程1"id="toc-latex科研论文新手教程1">LaTeX科研论文新手教程（1）</a><ul><li><a href="#latex基本框架"id="toc-latex基本框架">LaTeX基本框架</a></li></ul></li></ul></div><h1 id="latex科研论文新手教程1">LaTeX科研论文新手教程（1）</h1><p>​ LaTeX是当今世界最流行和使用最广泛的TeX宏集。LaTeX在PlainTeX的基础上增加了很多新的功能，使用者可以更加方便地运用TeX的强大功能完成一些文档编辑任务。使用LaTeX的优势在于，用户不需要自己设计命令和宏等，即使用户没有排版和程序设计的背景知识，也可以熟练应用TeX提供的强大功能。因此，即使用户并不是很了解TeX，也可以在几天甚至几小时内生成很多具有书籍质量的印刷品。对于<strong>科研论文</strong>来说，当中会应用许多复杂的表格和数学公式。LaTeX的表现就更为出色，因此它非常适用于生成高质量印刷品的科技和数学类文档。</p><span id="more"></span><p>​ 在笔者看来，目前比较好用的LaTeX写作软件有3个，分别是<ahref="https://cn.overleaf.com/">overleaf</a>，<ahref="http://www.ctex.org/HomePage">CTeX</a>，以及<ahref="https://miktex.org/">MiKTeX</a>，其中overleaf是一个云端的写作平台，许多期刊的格式可以直接导入，甚至投稿也可以通过overleaf完成。而CTeX是中国运筹协会发布的一款TeX的中文套装，其中是把MiKTeX和一些常用的相关工具，例如GSview、WinEdt等包装在一起制作的一个简易安装程序，所以有的时候它总会面临一些侵权问题。那么MiKTeX就是Windows平台下最好的TeX平台了。</p><h2 id="latex基本框架">LaTeX基本框架</h2><p>一篇LaTeX文档的基本框架应该如下所示：</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>&#123;article&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\title</span>&#123;...&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;...&#125;</span><br><span class="line"><span class="keyword">\institute</span>&#123;...&#125;</span><br><span class="line"><span class="keyword">\maketitle</span></span><br><span class="line"><span class="keyword">\begin</span>&#123;abstract&#125;</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"><span class="keyword">\end</span>&#123;abstract&#125;</span><br><span class="line"><span class="keyword">\keywords</span>&#123;...;...;...&#125;</span><br><span class="line"><span class="keyword">\section</span>&#123;...&#125;</span><br><span class="line"><span class="keyword">\subsection</span>&#123;...&#125;</span><br><span class="line"><span class="keyword">\subsection</span>&#123;...&#125;</span><br><span class="line"><span class="keyword">\section</span>*&#123;Acknowledgements&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;thebibliorgraphy&#125;</span><br><span class="line"><span class="keyword">\bibitem</span>&#123;&#125;</span><br><span class="line"><span class="keyword">\bibitem</span>&#123;&#125;</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line">.</span><br><span class="line"><span class="keyword">\end</span>&#123;thebibliorgraphy&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><p>​ 接下来我们我们将分别讨论：</p>### （1）]]></content>
      
      
      <categories>
          
          <category> LaTeX </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> 科研论文 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Matlab新手教程(1)</title>
      <link href="/Matlab%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B(1).html"/>
      <url>/Matlab%E6%96%B0%E6%89%8B%E6%95%99%E7%A8%8B(1).html</url>
      
        <content type="html"><![CDATA[<div id="TOC"><ul><li><a href="#matlab新手教程1"id="toc-matlab新手教程1">Matlab新手教程（1）</a><ul><li><a href="#matlab数据类型" id="toc-matlab数据类型">Matlab数据类型</a><ul><li><a href="#数值类型" id="toc-数值类型">数值类型：</a></li></ul></li></ul></li></ul></div><h1 id="matlab新手教程1">Matlab新手教程（1）</h1><h2 id="matlab数据类型">Matlab数据类型</h2><p>​Matlab中的数据类型主要包括<strong>数值类型、逻辑类型、字符串、函数句柄、结构体和元胞数组</strong>。下面将分别介绍。</p><span id="more"></span><h3 id="数值类型">数值类型：</h3><p>​基本的数值类型主要有整数、单精度浮点数和双精度浮点数。需要注意的是，在没有特殊定义的情况下，Matlab对所有数值都按照双精度浮点进行存储和操作。那么为什么要区分这些数值类型呢？这就涉及到精度和内存的矛盾。在工程应用中，我们很多的程序都是在做反复迭代运算，那么双精度浮点数会占用较大的内存，导致程序运行较慢，所以在满足精度要求的条件下，整数类型与单精度浮点数的优点就是节省变量占用的内存空间。</p><table><colgroup><col style="width: 55%" /><col style="width: 22%" /><col style="width: 22%" /></colgroup><thead><tr><th style="text-align: center;">数据格式</th><th style="text-align: center;">示例</th><th style="text-align: left;">说明</th></tr></thead><tbody><tr><td style="text-align: center;">int<em>x</em>,uint<em>x</em></td><td style="text-align: center;">int32(160)</td><tdstyle="text-align: left;">有符号和无符号的整数类型；<em>x</em>可以为8、16、32、64；<strong>相同数值的整数类型比浮点数类型占用更少的内存</strong>；<em>需要注意的是</em>，除了int64和uint64外的所有整数类型，都可以进行数学运算。</td></tr><tr><td style="text-align: center;">single</td><td style="text-align: center;">single(12.4)</td><tdstyle="text-align: left;">单精度浮点类型；<strong>相同数值的单精度浮点数比双精度浮点数占用更少的内存</strong>；但是单精度浮点数的精度以及能够表示的数值范围比双精度浮点数小。</td></tr><tr><td style="text-align: center;">double</td><td style="text-align: center;">111.11； 1.000-1.000i</td><tdstyle="text-align: left;">双精度浮点类型；为Matlab中的默认数值类型。</td></tr></tbody></table><h4 id="整数类型">1.整数类型</h4><p>​如表格所示，Matlab提供了8种内置的整数类型，分别为有4种有符号<em>x</em>位整数<strong>int<em>x</em></strong>和4种无符号<em>x</em>位整数<strong>uint<em>x</em></strong>。这八种整数类型的存储占用位数、能表示的数值范围和转换函数均不相同。具体的数值范围是:<br /><span class="math display">\[有符号x位整数：-2^{x-1}\sim2^{x-1}-1\\无符号x位整数：0\sim2^x-1\]</span><br />​在实际应用中，应根据实际需要合理选择合适的整数类型。由于在Matlab中数值的默认存储类型是双精度浮点数，因此将变量设置为整数类型时，需要使用相依ing的转换函数，即<strong>int<em>x</em>/uint<em>x</em></strong>，将双精度浮点数转为指定的整数类型。在转换过程中，Matlab默认将待转换数值转换为与之最接近的整数值，若小数部分为0.5，则转换后的结果为与该浮点数最接近的两个整数中绝对值较大的一个。如图所示：</p><p><imgsrc="https://pic1.imgdb.cn/item/634d077c16f2c2beb1e0bbcd.jpg" /></p><p>​另外，这些转换函数也可以将其他数据类型转换为指定的数据类型。在不超出数值范围的情况下，任意两个整数类型之间也可以通过转换函数进行转换。那想必就会有同学思考，既然8位有符号整数类型只能表示-128~127，那如果运算结果超出了其能够表示的范围会怎么样呢？我们可以看到结果是这样的：</p><p><imgsrc="https://pic1.imgdb.cn/item/634d08be16f2c2beb1e2b7c9.jpg" /></p><p>​即当运算结果超出相应的整数类型能够表示的最大范围时，就会出现错误，运算结果被置为该整数类型能够表示的<strong>最大值或最小值</strong>。除了上述命令外，Matlab还包括了几类不同运算法则的取整函数，也可以把浮点数转换成整数。如表：</p><table><colgroup><col style="width: 7%" /><col style="width: 53%" /><col style="width: 38%" /></colgroup><thead><tr><th style="text-align: center;">函数FUNC</th><th style="text-align: center;">运算法则</th><th style="text-align: center;">示例</th></tr></thead><tbody><tr><td style="text-align: center;">floor(x)</td><td style="text-align: center;">向下取整</td><td style="text-align: center;">floor(1.2)=1;floor(-2.5)=-3</td></tr><tr><td style="text-align: center;">ceil(x)</td><td style="text-align: center;">向上取整</td><td style="text-align: center;">ceil(1.2)=2;ceil(-2.5)=-2</td></tr><tr><td style="text-align: center;">round(x)</td><tdstyle="text-align: center;">取最接近的整数，若小数部分是0.5，则向绝对值大的方向取整</td><tdstyle="text-align: center;">round(1.2)=1;round(1.5)=2;round(-2.5)=-3</td></tr><tr><td style="text-align: center;">fix(x)</td><td style="text-align: center;">向0取整</td><td style="text-align: center;">fix(1.2)=1;fix(1.7)=1;fix(-1.7)=-1</td></tr></tbody></table><h4 id="浮点数类型">2.浮点数类型</h4><p>​如前所述，Matlab提供了单精度浮点和双精度浮点，其存储位宽、能够表示的数值范围、数值精度各方面都不相同。总体来说，单精度浮点占用位数少，因此占用内存小，但能够表示的数值范围和数值的精度都比双精度浮点小。而且需要注意的是两种浮点数都是有符号数，其最高位是符号位，0正1负。</p><p>​双精度浮点数在参与运算时，返回值的类型依赖于参与运算的其他数据类型。具体如表所示：</p><table><thead><tr><th style="text-align: center;">参与运算的数据类型</th><th style="text-align: center;">返回值类型</th></tr></thead><tbody><tr><td style="text-align: center;">逻辑类型、字符类型</td><td style="text-align: center;">双精度浮点</td></tr><tr><td style="text-align: center;">整数型</td><td style="text-align: center;">整数型</td></tr><tr><td style="text-align: center;">单精度浮点</td><td style="text-align: center;">单精度浮点</td></tr></tbody></table><ul><li><strong>注意</strong>：在Matlab中，单精度浮点不能与整数类型进行算术运算。</li></ul><p><imgsrc="https://pic1.imgdb.cn/item/634d1c4f16f2c2beb1022b43.jpg" /></p><h4 id="复数">3.复数</h4><p>​在Matlab中默认使用i/j作为虚部标志。在创建复数时，可以直接按照复数形式进行输入或者使用<em>complex</em>函数。</p><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td>real(z)</td><td>返回复数的实部</td></tr><tr><td>imag(z)</td><td>返回复数的虚部</td></tr><tr><td>abs(z)</td><td>返回复数的模</td></tr><tr><td>angle(z)</td><td>返回复数的辐角</td></tr><tr><td>conj(z)</td><td>返回复数的共轭复数</td></tr><tr><td>complex(a,b)</td><td>以a为实部，b为虚部创建复数</td></tr></tbody></table><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a=<span class="built_in">real</span>(<span class="number">3</span>+<span class="number">4</span><span class="built_in">i</span>);<span class="comment">%返回实部</span></span><br><span class="line">&gt;&gt; b=<span class="built_in">imag</span>(<span class="number">3</span>+<span class="number">4</span><span class="built_in">i</span>);<span class="comment">%返回虚部</span></span><br><span class="line">&gt;&gt; c=<span class="built_in">abs</span>(<span class="number">3</span>+<span class="number">4</span><span class="built_in">i</span>);<span class="comment">%返回模</span></span><br><span class="line">&gt;&gt; d=<span class="built_in">angle</span>(<span class="number">3</span>+<span class="number">4</span><span class="built_in">i</span>);<span class="comment">%返回辐角</span></span><br><span class="line">&gt;&gt; e=<span class="built_in">conj</span>(<span class="number">3</span>+<span class="number">4</span><span class="built_in">i</span>);<span class="comment">%返回共轭复数</span></span><br><span class="line">&gt;&gt; f=<span class="built_in">complex</span>(<span class="number">3</span>,<span class="number">4</span>);<span class="comment">%以3，4创建复数</span></span><br><span class="line">结果为：</span><br><span class="line">&gt;&gt; a,b,c,d,e,f</span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">     <span class="number">3</span></span><br><span class="line">b =</span><br><span class="line"></span><br><span class="line">     <span class="number">4</span></span><br><span class="line">c =</span><br><span class="line"></span><br><span class="line">     <span class="number">5</span></span><br><span class="line">d =</span><br><span class="line"></span><br><span class="line">    <span class="number">0.9273</span></span><br><span class="line">e =</span><br><span class="line"></span><br><span class="line">   <span class="number">3.0000</span> - <span class="number">4.0000</span><span class="built_in">i</span></span><br><span class="line">f =</span><br><span class="line">  <span class="number">3.0000</span> + <span class="number">4.0000</span><span class="built_in">i</span></span><br></pre></td></tr></table></figure><h4 id="无穷量inf和非数值量nan">4.无穷量(Inf)和非数值量(NaN)</h4><p>​Matlab中使用Inf和-Inf分别代表正无穷量和负无穷量，NaN表示非数值量。正负无穷量的产生一般是由于运算溢出导致，产生了超出双精度浮点数数值范围的结果；非数值量则是由于<em>0/0</em>或者<em>Inf/Inf</em>类型的非正常运算而产生的，这两个NaN彼此时不相等的。</p><figure class="highlight matlab"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&gt;&gt; a=<span class="number">0</span>/<span class="number">0</span>,b=<span class="built_in">log</span>(<span class="number">0</span>),c=<span class="built_in">inf</span>-<span class="built_in">inf</span></span><br><span class="line">a =</span><br><span class="line"></span><br><span class="line">   NaN</span><br><span class="line">b =</span><br><span class="line"></span><br><span class="line">  -Inf</span><br><span class="line">c =</span><br><span class="line"></span><br><span class="line">   NaN</span><br></pre></td></tr></table></figure><p>​以上就是Maltab中数据类型的数值类型部分。掌握数值类型能够帮助我们在一些特定场景下选择合适的函数或数值类型，亦可以在程序报错的时候及时发现错误。</p>]]></content>
      
      
      <categories>
          
          <category> Matlab </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Matlab新手教程 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
